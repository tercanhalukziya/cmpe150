#include <stdio.h>
#include <stdlib.h>

int main(void) {

	//trunk , line, column
			int N, t, l, c, j, a, b, m;
			char sym1, sym2, sym3;
			sym2 = '/' ;
			sym3 = '\\' ;

			scanf("%d %c", &N, &sym1);

			for (t=1; t <= N; t++){//trunk
				for ( l = 1 ; l <= t ; l++){//lines
					for(j=1 ; j<=2*N-t-l+1; j++){//left side spaces
						printf(" ");
					}
					for( c=1 ; c<=t+l-1; c++){//left side slashes
						printf("%c", sym2);
					}
					printf("%c", sym1);//the entered symbol
					for( c=1 ; c<=t+l-1; c++){//right side slashes
						printf("%c", sym3);
					}
					for(j=1 ; j<=2*N-t-l+1; j++){//right side spaces (not necessary)
						printf(" ");
					}
					printf("\n");
				}
			}
			//after this line is the body of the tree
			if (N % 2 == 0){
				for(b=1 ; b<= N - ((N-1)/2) ; b++){
					for(a = 0 ; a<=(2*N-1)-(N/2) ; a++){
							printf(" ");
					}
					for (m = 1; m<=N ; m++){
						printf("%c", sym1);
					}
					printf("\n");
				}
			}
			else {
				for(b=1 ; b<= N - ((N/2)-1) ; b++){
					for(a = 0 ; a<=(2*N-1)-((N-1)/2) ; a++){
						printf(" ");
					}
					for (m = 1; m<=N ; m++){
						printf("%c", sym1);
					}
				printf("\n");
				}
			}


	return EXIT_SUCCESS;
}
